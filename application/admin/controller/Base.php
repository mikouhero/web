<?php
/**
 * Created by PhpStorm.
 * User: Mikou.hu
 * Date: 2018/9/13
 */

namespace app\admin\controller;


use gmars\rbac\Rbac;
use org\bovigo\vfs\vfsStreamResolveIncludePathTestCase;
use think\Controller;
use think\Session;
use think\Request;
use think\Cookie;

class Base extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $css = config('style_path.admin_css_path');
        $js = config('style_path.admin_js_path');
        $img = config('style_path.admin_img_path');
        $picture = config('style_path.admin_picture_path');
        $this->assign(array(
            'css' => $css,
            'js' => $js,
            'img' => $img,
            'picture' => $picture,
            'user_name' => Session::get('manger_user.user_name')
        ));

        //权限过滤
         if (isset(Session::get('manger_user')['link']) && empty(Session::get('manger_user')['link'])) {
             $this->redirect("/admin/login/doCookie");
             die;
         };
         $request = \think\Request::instance();
         if (!$user_msg = Session::get('manger_user')) {
             if($request->post()){
                 $this->ajaxReturnMsg('105', '请重新登录', '');
             }
             $this->redirect('/admin/login');
         }

        $controller = strtolower($request->controller());
        $action = strtolower($request->action());
        if($action == "getlist"){
            $action = 'index';
        }
        $path = "admin/".$controller.'/'.$action;

        if(in_array(ucfirst($controller),config('rbac.NOT_AUTH_CONTROLLER'))){


        }else{
            if ($user_msg['id'] != 1 || $user_msg['user_name'] != 'admin') {
                $rbac = new Rbac();
                $rbac->cachePermission($user_msg['id']);
                if (!$rbac->can($path)) {
                    if($request->get()){
                        echo"<script>alert('无权限操作');</script>";
                        die;
                    }else if($request->post()){
                        $this->ajaxReturnMsg('100', '无权限操作', '');
                    }
                    exit;
                }
            }
        }
    }


    protected function ajaxReturnMsg($code = 200, $msg, $data, $api_id = 0)
    {
        //        $this->api->end($api_id,$code,$msg,$data);
        header('Access-Control-Allow-Origin: *');//跨域
        header('Content-type: application/json');
        echo json_encode(array('code' => $code, 'msg' => $msg, 'data' => $data));
        die;
    }
}