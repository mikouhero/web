<?php
/**
 * Created by PhpStorm.
 * User: Mikou.hu
 * Date: 2018/9/13
 */

namespace app\admin\controller;


use gmars\rbac\Rbac;
use think\Controller;
use think\Session;
use think\Request;
use think\Cookie;
use think\Db;


class Base extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $css = config('style_path.admin_css_path');
        $js = config('style_path.admin_js_path');
        $img = config('style_path.admin_img_path');
        $picture = config('style_path.admin_picture_path');
        $this->assign(array(
            'css' => $css,
            'js' => $js,
            'img' => $img,
            'picture' => $picture,
            'user_name' => Session::get('manger_user.user_name')
        ));

        //权限过滤
         if (isset(Session::get('manger_user')['link']) && empty(Session::get('manger_user')['link'])) {
             $this->redirect("/admin/login/doCookie");
             die;
         };
         $request = \think\Request::instance();
         if (!$user_msg = Session::get('manger_user')) {
             if($request->isPost()){
                 $this->ajaxReturnMsg('105', '请新登录', '');
             }
             $this->redirect('/admin/login');
         }

        $controller = strtolower($request->controller());
        $action = strtolower($request->action());
        if($action == "getlist"){
            $action = 'index';
        }
        $path = "admin/".$controller.'/'.$action;

        if(in_array(ucfirst($controller),config('rbac.NOT_AUTH_CONTROLLER'))){


        }else{
            if ($user_msg['id'] != 1 || $user_msg['user_name'] != 'admin') {
                $rbac = new Rbac();
                $rbac->cachePermission($user_msg['id']);
                if (!$rbac->can($path)) {
                    if($request->isGet()){
                        echo"<script>alert('无权限操作');history.back();</script>";
                        die;
                    }else if($request->isPost()){
                        $this->ajaxReturnMsg('100', '无权限操作', '');
                    }
                    exit;
                }
            }
        }
    }


    public function getMenu()
    {
        $user_msg = Session::get('manger_user');
        $new = array();
        /**
         * admin
         */
        $adp = 'admin_Permission_' .$user_msg['id']."_";
        if( ($user_msg['id'] == 1) || ($user_msg['user_name'] == 'admin')){
            if(empty($data = cache($adp))){
                $da = Db::name('permission')->field('path')->select();
                cache('adminpermission',$da);
                $data = $da;
            }
            foreach($data as $k => $v){
                if(preg_match( '/index$/',$v['path'])){
                    $new[] = $v['path'];
                }
            }
        }else{
            if(empty($data = cache($adp))){
                $permission = Db::name("permission")
                    ->alias('p')
                    ->join("role_permission rp", "p.id = rp.permission_id")
                    ->join("user_role ur", "rp.role_id = ur.role_id")
                    ->where("ur.user_id = {$user_msg['id']}")->select();

                cache('adminpermission',$permission);
                $data = $permission;
            }
            if($data){
                foreach($data as $k => $v){
                    if(preg_match( '/index$/',$v['path'])){
                        $new[] = $v['path'];
                    }
                }
            }
        }
        $this->ajaxReturnMsg(200,'success',$new);

    }
    protected function ajaxReturnMsg($code = 200, $msg, $data, $api_id = 0)
    {
        //        $this->api->end($api_id,$code,$msg,$data);
        header('Access-Control-Allow-Origin: *');//跨域
        header('Content-type: application/json');
        echo json_encode(array('code' => $code, 'msg' => $msg, 'data' => $data));
        die;
    }


}