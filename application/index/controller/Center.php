<?php
/**
 * Created by PhpStorm.
 * User: Mikou.hu
 * Date: 2018/9/29
 */

namespace app\index\controller;


use think\Controller;
use think\Request;
use think\Session;
use think\Db;

class Center extends  Controller
{

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $css = config('style_path.css_path');
        $js = config('style_path.js_path');
        $img = config('style_path.img_path');
        $picture = config('style_path.picture_path');
        $this->assign(array(
            'css' => $css,
            'js' => $js,
            'img' => $img,
            'picture' => $picture,
            'on1' =>'',
            'on2' =>'',
            'on3' =>'',
            'on4' =>'',
            'on5' =>''
        ));

        $request = \think\Request::instance();
        if (!$user_msg = Session::get('member_user')) {
            if($request->post()){
                $this->ajaxReturnMsg('105', '请重新登录', '');
            }
            $this->redirect('/');
        }
    }

    public function index()
    {
        $this->assign(array(
            'on1' => 'ddCur',
        ));
        return view('index@center/index');
    }

    public function getUser()
    {
       $user = Session::get('member_user');
       $data = Db::name('member')->alias('p1')
           ->field('p1.user,p1.cid,p2.name')
           ->join('company p2','p1.cid = p2.id','left')
           ->where('p1.id',$user['id'])
           ->where('p1.status',1)
           ->where('p1.deleted',0)
           ->where('p2.deleted',0)
           ->find();
       if(empty($data)){
           $this->ajaxReturnMsg(105,'重新登录','');
       }
       $data['last_login_time'] = formatDate($user['last_login_time']);
        $data['ip'] = Request::instance()->ip();;//登录ip地址
       $this->ajaxReturnMsg(200,'success',$data);

    }
    public function pwd()
    {
        $this->assign(array(
            'on2' => 'ddCur',
        ));
        return view('index@center/pwd');
    }


    public function edit(Request $request)
    {
        $data = $request->post();
        if( !isset($data['old']) || empty($data['old']) || !isset($data['newpwd']) || empty($data['newpwd']) || !isset($data['renew']) || empty($data['renew']) ){
            $this->ajaxReturnMsg(201,'您有数据未输入','');
        }
        if(!(md5($data['newpwd']) === md5($data['renew']))){
            $this->ajaxReturnMsg(201,'两次密码输入不一致','');
        }

        if(!Db::name('member')->where('id',Session::get('member_user.id'))->where('deleted',0)->where('password',md5($data['old']))->count()){
            $this->ajaxReturnMsg(201,'旧密码错误','');
        }
        Db::name('member')->where('id',Session::get('member_user.id'))->where('deleted',0)->update(array('password'=>md5($data['newpwd'])));
        Session::delete('member_user');
        $this->ajaxReturnMsg(200,'success','');


    }

    public function log()
    {
        $this->assign(array(
            'on3' => 'ddCur',
        ));
        return view('index@center/log');
    }

    public function order()
    {
        $this->assign(array(
            'on4' => 'ddCur',
        ));
        return view('index@center/order');

    }

    public function note()
    {
        $this->assign(array(
            'on5' => 'ddCur',
        ));
        return view('index@center/note');

    }

    protected function ajaxReturnMsg($code = 200, $msg, $data, $api_id = 0)
    {
        //        $this->api->end($api_id,$code,$msg,$data);
        header('Access-Control-Allow-Origin: *');//跨域
        header('Content-type: application/json');
        echo json_encode(array('code' => $code, 'msg' => $msg, 'data' => $data));
        die;
    }


}